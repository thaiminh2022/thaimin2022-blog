---
import MainLayout from "@layouts/MainLayout.astro";
import { getCollection } from "astro:content";
import type { InferGetStaticParamsType, InferGetStaticPropsType } from "astro";

export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");

  const uniqueTags = [...new Set(blogEntries.map((b) => b.data.tags).flat())];

  return uniqueTags.map((tag) => {
    const posts = blogEntries.filter(
      (p) =>
        p.data.tags.findIndex((t) => t.toLowerCase() == tag.toLowerCase()) >= 0,
    );
    return {
      params: { slug: tag },
      props: { posts },
    };
  });
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { posts } = Astro.props as Props;
const { slug: tag } = Astro.params as Params;
---

<MainLayout title={`${tag} tag`}>
  <div class="flex flex-row gap-x-3 align-middle">
    <i class="bx bx-purchase-tag-alt text-3xl"></i>
    <div class="text-2xl font-bold">
      <a href="/tags" class="underline">Tag:</a>
      <span> #{tag}</span>
    </div>
  </div>
  <div class="flex flex-col gap-y-2 py-3 text-xl">
    {
      posts.map((p) => (
        <a class="flex flex-col gap-x-5  md:flex-row" href={`/blog/${p.slug}`}>
          <p class="md:text-text italic text-text-light">
            {p.data.date.toLocaleDateString(undefined, {
              dateStyle: "long",
            })}
          </p>
          <p class="underline underline-offset-4">{p.data.title}</p>
        </a>
      ))
    }
  </div>
</MainLayout>
